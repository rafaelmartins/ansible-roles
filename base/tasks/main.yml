---
- name: detect debian codename
  set_fact:
    debian_codename: "{% if upgrade is defined %}{{ upgrade }}{% else %}{{ ansible_facts.lsb.codename }}{% endif %}"
  tags:
    - bootstrap

- name: update sources.list
  template:
    src: sources.list.j2
    dest: /etc/apt/sources.list
  tags:
    - bootstrap

- name: remove default /etc/apt/sources.list.d
  file:
    path: /etc/apt/sources.list.d
    state: absent
  tags:
    - never
    - bootstrap

- name: ensure that /etc/apt/sources.list.d exists
  file:
    path: /etc/apt/sources.list.d
    state: directory
  tags:
    - bootstrap

- name: create upgrade logs directory
  file:
    path: /var/log/apt-upgrades
    state: directory
  tags:
    - bootstrap

- name: upgrade system packages
  apt:
    update_cache: yes
    upgrade: full
    autoclean: yes
    autoremove: yes
  register: apt_upgrade
  tags:
    - bootstrap

- name: store apt upgrade logs
  template:
    src: full-upgrade.log.j2
    dest: /var/log/apt-upgrades/full-upgrade_{{ ansible_date_time.iso8601 }}.log
  when: apt_upgrade.changed
  tags:
    - bootstrap

- name: install common packages
  apt:
    pkg:
      - sudo
      - git
      - gpg
      - htop
      - lshw
      - vim
  tags:
    - bootstrap

- name: check if /dev/hwrng exists
  stat:
    path: /dev/hwrng
  register: hwrng
  tags:
    - bootstrap

- name: remove haveged (we have /dev/hwrng)
  apt:
    name: haveged
    state: absent
  when: hwrng.stat.exists
  tags:
    - bootstrap

- name: install rng-tools (we have /dev/hwrng)
  apt:
    name: rng-tools
  when: hwrng.stat.exists
  tags:
    - bootstrap

- name: ensure that rng-tools is enabled and running (we have /dev/hwrng)
  systemd:
    name: rng-tools
    enabled: yes
    state: started
    daemon_reload: yes
  when: hwrng.stat.exists
  tags:
    - bootstrap

- name: remove rng-tools (we don't have /dev/hwrng)
  apt:
    name: rng-tools
    state: absent
  when: not hwrng.stat.exists
  tags:
    - bootstrap

- name: install haveged (we don't have /dev/hwrng)
  apt:
    name: haveged
  when: not hwrng.stat.exists
  tags:
    - bootstrap

- name: ensure that haveged is enabled and running (we don't have /dev/hwrng)
  systemd:
    name: haveged
    enabled: yes
    state: started
    daemon_reload: yes
  when: not hwrng.stat.exists
  tags:
    - bootstrap

- name: ensure user exists
  user:
    name: "{{ item.name }}"
    shell: /bin/bash
    groups: sudo
    append: yes
  with_items: "{{ global_users + users }}"
  tags:
    - bootstrap

- name: ensure ssh directory exists
  file:
    path: /home/{{ item.name }}/.ssh
    state: directory
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
    mode: "0700"
  with_items: "{{ global_users + users }}"
  tags:
    - bootstrap

- name: download ssh keys
  get_url:
    url: https://github.com/{{ item.github }}.keys
    dest: /home/{{ item.name }}/.ssh/authorized_keys
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
    mode: "0600"
  when: "'github' in item"
  with_items: "{{ global_users + users }}"
  tags:
    - bootstrap

- name: install sudoers configuration
  template:
    src: sudoers.j2
    dest: /etc/sudoers.d/{{ item.name }}
  with_items: "{{ global_users + users }}"
  tags:
    - bootstrap

- name: install sshd configuration
  template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
  notify: restart sshd
  tags:
    - bootstrap

---
- name: find latest distfile
  distfile:
    name: filebin
    version: LATEST
    file_prefix: filebin-static-linux-amd64-
    file_extension: .tar.xz
  register: filebin_distfile

- name: download distfile
  get_url:
    url: "{{ filebin_distfile.file_url }}"
    dest: /var/download/filebin.tar.xz
    checksum: "{{ filebin_distfile.checksum }}"
  register: filebin_download

- name: create temporary directory
  tempfile:
    state: directory
  register: filebin_tempdir
  when: filebin_download.changed

- name: extract distfile
  unarchive:
    src: "{{ filebin_download.dest }}"
    remote_src: yes
    dest: "{{ filebin_tempdir.path }}"
    extra_opts:
      - --strip-components=1
  when: filebin_download.changed

- name: install binary
  copy:
    src: "{{ filebin_tempdir.path }}/filebin"
    remote_src: yes
    dest: /usr/local/bin/filebin
  when: filebin_download.changed
  notify:
    - restart filebin

- name: install magic database
  copy:
    src: "{{ filebin_tempdir.path }}/magic.mgc"
    remote_src: yes
    dest: /usr/local/share/magic.mgc
  when: filebin_download.changed
  notify:
    - restart filebin

- name: delete temporary directory
  file:
    path: "{{ filebin_tempdir.path }}"
    state: absent
  when: filebin_download.changed

- name: install nginx configuration
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/conf.d/90-{{ filebin_server_name }}.conf
  notify:
    - restart nginx

- name: create systemd service
  template:
    src: filebin.service.j2
    dest: /etc/systemd/system/filebin.service
  notify:
    - restart filebin

- name: enable and start systemd service
  systemd:
    name: filebin
    enabled: yes
    state: started
    daemon_reload: yes
